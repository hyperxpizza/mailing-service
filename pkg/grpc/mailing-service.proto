syntax = "proto3";

option go_package = "github.com/hyperxpizza/mailing-service/pkg/grpc";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

message MailRecipient {
    int64 id = 1;
    string email = 2;
    int64 usersServiceID = 3;
    google.protobuf.Timestamp created = 4;
    google.protobuf.Timestamp updated = 5;
    repeated MailGroup groups = 6;
}

message MailGroup {
    int64 id = 1;
    string name = 2;
    google.protobuf.Timestamp created = 3;
    google.protobuf.Timestamp updated = 4;
}

message NewMailRecipient {
    string email = 1;
    int64 usersServiceID = 2;
}

message MailRecipients{
    repeated MailRecipient mailRecipients = 1;
}

message MailGroups {
    repeated MailGroups groups = 1;
}

message MailingServiceID {
    int64 id = 1;
}

message MailingServiceEmail {
    string email = 1;
}

message MailingServiceGroup {
    string group = 1;
}

message MailingServiceNewGroup {
    string name = 1;
}

message SearchRequest {
    string query = 1;
}

message Count {
    int64 num = 1;
}

service MailingService {
    rpc AddRecipient(NewMailRecipient) returns (MailingServiceID) {};
    rpc RemoveRecipient(MailingServiceEmail) returns (google.protobuf.Empty) {};
    rpc GetRecipients(google.protobuf.Empty) returns (MailRecipients) {};
    rpc GetRecipientsByGroup(MailingServiceGroup) returns (MailRecipients) {};
    rpc SearchRecipients(SearchRequest) returns (MailRecipients) {};
    rpc CountRecipients(MailingServiceGroup) returns (Count) {};

    rpc CreateGroup(MailingServiceNewGroup) returns (google.protobuf.Empty) {};
    rpc GetGroups(google.protobuf.Empty) returns (MailGroups) {};
    rpc DeleteGroup(MailingServiceID) returns (google.protobuf.Empty) {};
    rpc UpdateGroupName(MailingServiceNewGroup) returns (google.protobuf.Empty) {};
}